name: Build

on: [push]

jobs:
  build_web:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: npm install
      - run: npm run build --if-present
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: dist
          path: dist
      
      
  build_ubuntu:
    runs-on: [ubuntu-latest]
    needs: [build_web]
    
    strategy:
      matrix:
        platform: [android, electron]
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - run: npm install
    - name: Download artifact
      uses: actions/download-artifact@v1.0.0
      with:
        name: dist
    - run: ls ./dist -a
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - run: npx cap copy ${{ matrix.platform }}
    
    # Electron specific
    - name: Build electron
      if: matrix.platform == 'electron'
      run: |
        cd electron
        npm install
        npx electron-builder -mwl
    - run: ls -a ./electron/dist
      if: matrix.platform == 'electron'
    
    # Android specific
    - name: Build apk
      if: matrix.platform == 'android'
      run: |
        chmod +x ./android/gradlew
        cd android
        ./gradlew build
        ./gradlew assembleDebug
    - name: Upload to app-center
      if: matrix.platform == 'android'
      uses: zackify/AppCenter-Github-Action@v1.0.0
      with:
        token: ${{ secrets.APP_CENTER_TOKEN }}
        appName: Path-Scale/Social-Soy-Android
        file: ./android/app/build/outputs/apk/release/app-release-unsigned.apk
        group: Collaborators
    - name: Upload artifact
      if: matrix.platform == 'android'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Android
        path: ./android/app/build/outputs/apk/release/app-release-unsigned.apk
      
  build_macos:
    needs: [build_web]
    runs-on: [ubuntu-latest]
    steps:
      - run: ls -a
